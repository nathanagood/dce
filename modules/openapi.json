{
    "openapi": "3.0.0",
    "info": {
        "version": "1.0",
        "title": "${namespace}",
        "description": "API for Disposable Cloud Environment (DCE)"
    },
    "paths": {
        "/accounts": {
            "options": {
                "summary": "CORS support",
                "description": "Enable CORS by returning correct headers\n",
                "tags": [
                    "CORS"
                ],
                "x-amazon-apigateway-integration": {
                    "type": "mock",
                    "requestTemplates": {
                        "application/json": "{\n  \"statusCode\" : 200\n}\n"
                    },
                    "responses": {
                        "default": {
                            "statusCode": "200",
                            "responseParameters": {
                                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                                "method.response.header.Access-Control-Allow-Methods": "'*'",
                                "method.response.header.Access-Control-Allow-Origin": "'*'"
                            },
                            "responseTemplates": {
                                "application/json": "{}\n"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Default response for CORS method",
                        "headers": {
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "summary": "Lists accounts",
                "parameters": [
                    {
                        "in": "query",
                        "name": "status",
                        "required": false,
                        "description": "Account status",
                        "schema": {
                            "$ref": "#/components/schemas/accountStatus"
                        }
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "required": false,
                        "description": "the maximum number of results to return",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "in": "query",
                        "name": "nextId",
                        "required": false,
                        "description": "Used internally for paging",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of accounts",
                        "headers": {
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Link": {
                                "description": "URL link to the next page of responses",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/account"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid request"
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "x-amazon-apigateway-integration": {
                    "uri": "${accounts_lambda}",
                    "httpMethod": "POST",
                    "type": "aws_proxy",
                    "passthroughBehavior": "when_no_match"
                },
                "security": [
                    {
                        "sigv4": []
                    }
                ]
            },
            "post": {
                "summary": "Add an AWS Account to the account pool",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "id",
                                    "adminRoleArn"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "string",
                                        "description": "AWS Account ID"
                                    },
                                    "adminRoleArn": {
                                        "type": "string",
                                        "description": "ARN for an IAM role within this AWS account. The DCE master account will assume this IAM role to execute operations within this AWS account. This IAM role is configured by the client, and must be configured with [a Trust Relationship with the DCE master account.](/https://docs.aws.amazon.com/IAM/latest/UserGuide/tutorial_cross-account-with-roles.html)\n"
                                    },
                                    "metadata": {
                                        "type": "object",
                                        "description": "Arbitrary metadata to attach to the account object."
                                    }
                                }
                            }
                        }
                    },
                    "description": "Account creation parameters"
                },
                "responses": {
                    "201": {
                        "description": "Successful creation",
                        "headers": {
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid request"
                    },
                    "403": {
                        "description": "Failed to authenticate request"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "x-amazon-apigateway-integration": {
                    "uri": "${accounts_lambda}",
                    "httpMethod": "POST",
                    "type": "aws_proxy",
                    "passthroughBehavior": "when_no_match"
                },
                "security": [
                    {
                        "sigv4": []
                    }
                ]
            }
        },
        "/accounts/{accountId}": {
            "options": {
                "summary": "CORS support",
                "description": "Enable CORS by returning correct headers\n",
                "parameters": [
                    {
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "description": "AWS Account ID",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "CORS"
                ],
                "x-amazon-apigateway-integration": {
                    "type": "mock",
                    "requestTemplates": {
                        "application/json": "{\n  \"statusCode\" : 200\n}\n"
                    },
                    "responses": {
                        "default": {
                            "statusCode": "200",
                            "responseParameters": {
                                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                                "method.response.header.Access-Control-Allow-Methods": "'*'",
                                "method.response.header.Access-Control-Allow-Origin": "'*'"
                            },
                            "responseTemplates": {
                                "application/json": "{}\n"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Default response for CORS method",
                        "headers": {
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "summary": "Get a specific account by an account ID",
                "parameters": [
                    {
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "description": "AWS Account ID",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "headers": {
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Link": {
                                "description": "URL link to the next page of responses",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/account"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Failed to retrieve account"
                    }
                },
                "x-amazon-apigateway-integration": {
                    "uri": "${accounts_lambda}",
                    "httpMethod": "POST",
                    "type": "aws_proxy",
                    "passthroughBehavior": "when_no_match"
                },
                "security": [
                    {
                        "sigv4": []
                    }
                ]
            },
            "put": {
                "summary": "Update an account",
                "parameters": [
                    {
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "description": "AWS Account ID",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "adminRoleArn": {
                                        "type": "string",
                                        "description": "ARN for an IAM role within this AWS account. The DCE master account will assume this IAM role to execute operations within this AWS account. This IAM role is configured by the client, and must be configured with [a Trust Relationship with the DCE master account.](/https://docs.aws.amazon.com/IAM/latest/UserGuide/tutorial_cross-account-with-roles.html)\n"
                                    },
                                    "metadata": {
                                        "type": "object",
                                        "additionalProperties": true,
                                        "description": "Arbitrary metadata to attach to the account object."
                                    }
                                }
                            }
                        }
                    },
                    "description": "Account parameters to modify"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "headers": {
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "x-amazon-apigateway-integration": {
                    "uri": "${accounts_lambda}",
                    "httpMethod": "POST",
                    "type": "aws_proxy",
                    "passthroughBehavior": "when_no_match"
                },
                "security": [
                    {
                        "sigv4": []
                    }
                ]
            },
            "delete": {
                "summary": "Delete an account by ID.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "description": "The ID of the account to be deleted.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "The account has been successfully deleted.",
                        "headers": {
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized."
                    },
                    "404": {
                        "description": "No account found for the given ID."
                    },
                    "409": {
                        "description": "The account is unable to be deleted."
                    }
                },
                "x-amazon-apigateway-integration": {
                    "uri": "${accounts_lambda}",
                    "httpMethod": "POST",
                    "type": "aws_proxy",
                    "passthroughBehavior": "when_no_match"
                },
                "security": [
                    {
                        "sigv4": []
                    }
                ]
            }
        },
        "/leases": {
            "options": {
                "summary": "CORS support",
                "description": "Enable CORS by returning correct headers\n",
                "tags": [
                    "CORS"
                ],
                "x-amazon-apigateway-integration": {
                    "type": "mock",
                    "requestTemplates": {
                        "application/json": "{\n  \"statusCode\" : 200\n}\n"
                    },
                    "responses": {
                        "default": {
                            "statusCode": "200",
                            "responseParameters": {
                                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                                "method.response.header.Access-Control-Allow-Methods": "'*'",
                                "method.response.header.Access-Control-Allow-Origin": "'*'"
                            },
                            "responseTemplates": {
                                "application/json": "{}\n"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Default response for CORS method",
                        "headers": {
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Creates a new lease.",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "principalId",
                                    "budgetAmount",
                                    "budgetCurrency",
                                    "budgetNotificationEmails"
                                ],
                                "properties": {
                                    "principalId": {
                                        "type": "string"
                                    },
                                    "budgetAmount": {
                                        "type": "number"
                                    },
                                    "budgetCurrency": {
                                        "type": "string"
                                    },
                                    "budgetNotificationEmails": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "expiresOn": {
                                        "type": "number"
                                    }
                                }
                            }
                        }
                    },
                    "description": "The owner of the lease"
                },
                "responses": {
                    "201": {
                        "description": "Successful creation",
                        "headers": {
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/lease"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "If the \"expiresOn\" date specified is non-zero but less than the current epoch date,  \"Requested lease has a desired expiry date less than today: \" or \"Failed to Parse Request Body\" if the request body is blank or incorrectly formatted.\n"
                    },
                    "403": {
                        "description": "Failed to authenticate request"
                    },
                    "409": {
                        "description": "Conflict if there is an existing lease already active with the\nprovided principal and account."
                    },
                    "500": {
                        "description": "Server errors if the database cannot be reached."
                    }
                },
                "x-amazon-apigateway-integration": {
                    "uri": "${leases_lambda}",
                    "httpMethod": "POST",
                    "type": "aws_proxy",
                    "passthroughBehavior": "when_no_match"
                },
                "security": [
                    {
                        "sigv4": []
                    }
                ]
            },
            "delete": {
                "summary": "Removes a lease.",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "principalId",
                                    "accountId"
                                ],
                                "properties": {
                                    "principalId": {
                                        "type": "string"
                                    },
                                    "accountId": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    "description": "The owner of the lease"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/lease"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "\"Failed to Parse Request Body\" if the request body is blank or incorrectly formatted. or if there are no account leases found for the specified accountId or if the account specified is not already Active.\n"
                    },
                    "403": {
                        "description": "Failed to authenticate request"
                    },
                    "500": {
                        "description": "Server errors if the database cannot be reached."
                    }
                },
                "x-amazon-apigateway-integration": {
                    "uri": "${leases_lambda}",
                    "httpMethod": "POST",
                    "type": "aws_proxy",
                    "passthroughBehavior": "when_no_match"
                },
                "security": [
                    {
                        "sigv4": []
                    }
                ]
            },
            "get": {
                "summary": "Get leases",
                "parameters": [
                    {
                        "in": "query",
                        "name": "principalId",
                        "required": false,
                        "description": "Principal ID of the leases.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "accountId",
                        "required": false,
                        "description": "Account ID of the leases.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "status",
                        "required": false,
                        "description": "Status of the leases.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "nextPrincipalId",
                        "required": false,
                        "description": "Principal ID with which to begin the scan operation. This is used to\ntraverse through paginated results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "nextAccountId",
                        "required": false,
                        "description": "Account ID with which to begin the scan operation. This is used to\ntraverse through paginated results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "required": false,
                        "description": "The maximum number of leases to evaluate (not necessarily the number\nof matching leases). If there is another page, the URL for page will\nbe in the response Link header.",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {
                            "Link": {
                                "description": "Appears only when there is another page of results in the query.\nThe value contains the URL for the next page of the results and\nfollows the `; rel=\"next\"` convention.",
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/lease"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "\"Failed to Parse Request Body\" if the request body is blank or incorrectly formatted.\n"
                    },
                    "403": {
                        "description": "Failed to authenticate request"
                    }
                },
                "x-amazon-apigateway-integration": {
                    "uri": "${leases_lambda}",
                    "httpMethod": "POST",
                    "type": "aws_proxy",
                    "passthroughBehavior": "when_no_match"
                },
                "security": [
                    {
                        "sigv4": []
                    }
                ]
            }
        },
        "/leases/{id}": {
            "options": {
                "summary": "CORS support",
                "description": "Enable CORS by returning correct headers\n",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "description": "AWS Account ID",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "CORS"
                ],
                "x-amazon-apigateway-integration": {
                    "type": "mock",
                    "requestTemplates": {
                        "application/json": "{\n  \"statusCode\" : 200\n}\n"
                    },
                    "responses": {
                        "default": {
                            "statusCode": "200",
                            "responseParameters": {
                                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                                "method.response.header.Access-Control-Allow-Methods": "'*'",
                                "method.response.header.Access-Control-Allow-Origin": "'*'"
                            },
                            "responseTemplates": {
                                "application/json": "{}\n"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Default response for CORS method",
                        "headers": {
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "summary": "Get a lease by Id",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "description": "Id for lease",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "headers": {
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/lease"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Failed to retrieve lease"
                    }
                },
                "x-amazon-apigateway-integration": {
                    "uri": "${leases_lambda}",
                    "httpMethod": "POST",
                    "type": "aws_proxy",
                    "passthroughBehavior": "when_no_match"
                },
                "security": [
                    {
                        "sigv4": []
                    }
                ]
            }
        },
        "/leases/{id}/auth": {
            "options": {
                "summary": "CORS support",
                "description": "Enable CORS by returning correct headers\n",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "description": "AWS Account ID",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "CORS"
                ],
                "x-amazon-apigateway-integration": {
                    "type": "mock",
                    "requestTemplates": {
                        "application/json": "{\n  \"statusCode\" : 200\n}\n"
                    },
                    "responses": {
                        "default": {
                            "statusCode": "200",
                            "responseParameters": {
                                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                                "method.response.header.Access-Control-Allow-Methods": "'*'",
                                "method.response.header.Access-Control-Allow-Origin": "'*'"
                            },
                            "responseTemplates": {
                                "application/json": "{}\n"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Default response for CORS method",
                        "headers": {
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Create lease authentication by Id",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "description": "Id for lease",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Success",
                        "headers": {
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/leaseAuth"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Failed to retrieve lease authentication"
                    },
                    "500": {
                        "description": "Server failure"
                    }
                },
                "x-amazon-apigateway-integration": {
                    "uri": "${lease_auth_lambda}",
                    "httpMethod": "POST",
                    "type": "aws_proxy",
                    "passthroughBehavior": "when_no_match"
                },
                "security": [
                    {
                        "sigv4": []
                    }
                ]
            }
        },
        "/usage": {
            "options": {
                "summary": "CORS support",
                "description": "Enable CORS by returning correct headers\n",
                "tags": [
                    "CORS"
                ],
                "x-amazon-apigateway-integration": {
                    "type": "mock",
                    "requestTemplates": {
                        "application/json": "{\n  \"statusCode\" : 200\n}\n"
                    },
                    "responses": {
                        "default": {
                            "statusCode": "200",
                            "responseParameters": {
                                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                                "method.response.header.Access-Control-Allow-Methods": "'*'",
                                "method.response.header.Access-Control-Allow-Origin": "'*'"
                            },
                            "responseTemplates": {
                                "application/json": "{}\n"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Default response for CORS method",
                        "headers": {
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "summary": "Get usage records by date range",
                "parameters": [
                    {
                        "in": "query",
                        "name": "startDate",
                        "required": false,
                        "description": "start date of the usage",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "in": "query",
                        "name": "endDate",
                        "required": false,
                        "description": "end date of the usage",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "in": "query",
                        "name": "principalId",
                        "required": false,
                        "description": "the ID of the principal for which to get usage informartion",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "required": false,
                        "description": "the maximum number of results to return",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "in": "query",
                        "name": "nextPrincipalId",
                        "required": false,
                        "description": "the maximum number of results to return",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "nextStartDate",
                        "required": false,
                        "description": "the maximum number of results to return",
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "headers": {
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/usage"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request validation error."
                    },
                    "403": {
                        "description": "Failed to authenticate request"
                    },
                    "500": {
                        "description": "Server error"
                    }
                },
                "x-amazon-apigateway-integration": {
                    "uri": "${usages_lambda}",
                    "httpMethod": "POST",
                    "type": "aws_proxy",
                    "passthroughBehavior": "when_no_match"
                },
                "security": [
                    {
                        "sigv4": []
                    }
                ]
            }
        }
    },
    "components": {
        "securitySchemes": {
            "sigv4": {
                "type": "apiKey",
                "name": "Authorization",
                "in": "header",
                "x-amazon-apigateway-authtype": "awsSigv4"
            }
        },
        "schemas": {
            "lease": {
                "description": "Lease Details",
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Lease ID"
                    },
                    "principalId": {
                        "type": "string",
                        "description": "principalId of the lease to get"
                    },
                    "accountId": {
                        "type": "string",
                        "description": "accountId of the AWS account"
                    },
                    "leaseStatus": {
                        "$ref": "#/components/schemas/leaseStatus"
                    },
                    "leaseStatusReason": {
                        "$ref": "#/components/schemas/leaseStatusReason"
                    },
                    "createdOn": {
                        "type": "number",
                        "description": "creation date in epoch seconds"
                    },
                    "lastModifiedOn": {
                        "type": "number",
                        "description": "date last modified in epoch seconds"
                    },
                    "budgetAmount": {
                        "type": "number",
                        "description": "budget amount"
                    },
                    "budgetCurrency": {
                        "type": "string",
                        "description": "budget currency"
                    },
                    "budgetNotificationEmails": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "budget notification emails"
                    },
                    "leaseStatusModifiedOn": {
                        "type": "number",
                        "description": "date lease status was last modified in epoch seconds"
                    },
                    "expiresOn": {
                        "type": "number",
                        "description": "date lease should expire in epoch seconds"
                    }
                }
            },
            "leaseAuth": {
                "description": "Lease Authentication",
                "type": "object",
                "properties": {
                    "accessKeyId": {
                        "type": "string",
                        "description": "Access Key ID for access to the AWS API"
                    },
                    "secretAccessKey": {
                        "type": "string",
                        "description": "Secret Access Key for access to the AWS API"
                    },
                    "sessionToken": {
                        "type": "string",
                        "description": "Session Token for access to the AWS API"
                    },
                    "consoleUrl": {
                        "type": "string",
                        "description": "URL to access the AWS Console"
                    }
                }
            },
            "account": {
                "description": "Account Details",
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "AWS Account ID"
                    },
                    "accountStatus": {
                        "$ref": "#/components/schemas/accountStatus"
                    },
                    "adminRoleArn": {
                        "type": "string",
                        "description": "ARN for an IAM role within this AWS account. The DCE master account\nwill assume this IAM role to execute operations within this AWS\naccount. This IAM role is configured by the client, and must be\nconfigured with [a Trust Relationship with the DCE master\naccount.](/https://docs.aws.amazon.com/IAM/latest/UserGuide/tutorial_cross-account-with-roles.html)"
                    },
                    "principalRoleArn": {
                        "type": "string",
                        "description": "ARN for an IAM role within this AWS account. This role is created by\nthe DCE master account, and may be assumed by principals to login to\ntheir AWS child account."
                    },
                    "principalPolicyHash": {
                        "type": "string",
                        "description": "The S3 object ETag used to apply the Principal IAM Policy within\nthis AWS account.  This policy is created by the DCE master account,\nand is assumed by people with access to principalRoleArn."
                    },
                    "lastModifiedOn": {
                        "type": "integer",
                        "description": "Epoch timestamp, when account record was last modified"
                    },
                    "createdOn": {
                        "type": "integer",
                        "description": "Epoch timestamp, when account record was created"
                    },
                    "metadata": {
                        "type": "object",
                        "description": "Any organization specific data pertaining to the account that needs\nto be persisted"
                    }
                }
            },
            "accountStatus": {
                "type": "string",
                "enum": [
                    "Ready",
                    "NotReady",
                    "Leased",
                    "Orphaned"
                ],
                "description": "Status of the Account.\n\"Ready\": The account is clean and ready for lease\n\"NotReady\": The account is in \"dirty\" state, and needs to be reset before it may be leased.\n\"Leased\": The account is leased to a principal\n"
            },
            "leaseStatus": {
                "type": "string",
                "enum": [
                    "Active",
                    "Inactive"
                ],
                "description": "Status of the Lease.\n\"Active\": The principal is leased and has access to the account\n\"Inactive\": The lease has become inactive, either through expiring, exceeding budget, or by request.\n"
            },
            "leaseStatusReason": {
                "type": "string",
                "enum": [
                    "LeaseExpired",
                    "LeaseOverBudget",
                    "LeaseDestroyed",
                    "LeaseActive",
                    "LeaseRolledBack"
                ],
                "description": "A reason behind the lease status.\n\"LeaseExpired\": The lease exceeded its expiration time (\"expiresOn\") and\nthe associated account was reset and returned to the account pool.\n\"LeaseOverBudget\": The lease exceeded its budgeted amount and the\nassociated account was reset and returned to the account pool.\n\"LeaseDestroyed\": The lease was adminstratively ended, which can be done\nvia the leases API.\n\"LeaseActive\": The lease is active.\n\"LeaseRolledBack\": A system error occurred while provisioning the lease.\nand it was rolled back.\n"
            },
            "usage": {
                "description": "usage cost of the aws account from start date to end date",
                "type": "object",
                "properties": {
                    "principalId": {
                        "type": "string",
                        "description": "principalId of the user who owns the lease of the AWS account\n"
                    },
                    "accountId": {
                        "type": "string",
                        "description": "accountId of the AWS account"
                    },
                    "startDate": {
                        "type": "number",
                        "description": "usage start date as Epoch Timestamp"
                    },
                    "endDate": {
                        "type": "number",
                        "description": "usage end date as Epoch Timestamp"
                    },
                    "costAmount": {
                        "type": "number",
                        "description": "usage cost Amount of AWS account for given period"
                    },
                    "costCurrency": {
                        "type": "string",
                        "description": "usage cost currency"
                    },
                    "timeToLive": {
                        "type": "number",
                        "description": "ttl attribute as Epoch Timestamp"
                    }
                }
            }
        }
    }
}